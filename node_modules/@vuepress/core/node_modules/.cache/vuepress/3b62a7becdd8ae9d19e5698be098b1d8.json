{"remainingRequest":"D:\\demo\\mp5088643.github.io\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\demo\\mp5088643.github.io\\node_modules\\vuepress-theme-antdocs\\components\\PageNav.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\demo\\mp5088643.github.io\\node_modules\\vuepress-theme-antdocs\\components\\PageNav.vue","mtime":1620622755976},{"path":"D:\\demo\\mp5088643.github.io\\node_modules\\css-loader\\dist\\cjs.js","mtime":1618486733497},{"path":"D:\\demo\\mp5088643.github.io\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1618486733705},{"path":"D:\\demo\\mp5088643.github.io\\node_modules\\postcss-loader\\src\\index.js","mtime":1618486733592},{"path":"D:\\demo\\mp5088643.github.io\\node_modules\\less-loader\\dist\\cjs.js","mtime":1618571013892},{"path":"D:\\demo\\mp5088643.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1618486733370},{"path":"D:\\demo\\mp5088643.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1618486733705}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJy4uL3N0eWxlcy9wYWxldHRlLmxlc3MnOwpAaW1wb3J0ICcuLi9zdHlsZXMvd3JhcHBlci5sZXNzJzsKLnBhZ2UtbmF2IHsKICAvLyBAZXh0ZW5kICR3cmFwcGVyOwogICYgewogICAgLndyYXBwZXI7CiAgfQogIAogIHBhZGRpbmctdG9wOiAxcmVtOwogIHBhZGRpbmctYm90dG9tOiAwOwoKICAuaW5uZXIgewogICAgbWluLWhlaWdodDogMnJlbTsKICAgIG1hcmdpbi10b3A6IDA7CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgQGJvcmRlckNvbG9yOwogICAgcGFkZGluZy10b3A6IDEuNzVyZW07CiAgICBvdmVyZmxvdzogYXV0bzsgLy8gY2xlYXIgZmxvYXQKICB9CgogIC5uZXh0IHsKICAgIGZsb2F0OiByaWdodDsKICB9Cn0K"},{"version":3,"sources":["PageNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PageNav.vue","sourceRoot":"node_modules/vuepress-theme-antdocs/components","sourcesContent":["<template>\n  <div v-if=\"prev || next\" class=\"page-nav\">\n    <p class=\"inner\">\n      <span v-if=\"prev\" class=\"prev\">\n        <a v-if=\"prev.type === 'external'\" class=\"prev\" :href=\"prev.path\" target=\"_blank\" rel=\"noopener noreferrer\">\n          {{ prev.title || prev.path }}\n\n          <OutboundLink />\n        </a>\n\n        <RouterLink v-else class=\"prev\" :to=\"prev.path\">\n          <a-icon type=\"left\" />\n          {{ prev.title || prev.path }}\n        </RouterLink>\n      </span>\n\n      <span v-if=\"next\" class=\"next\">\n        <a v-if=\"next.type === 'external'\" :href=\"next.path\" target=\"_blank\" rel=\"noopener noreferrer\">\n          {{ next.title || next.path }}\n\n          <OutboundLink />\n        </a>\n\n        <RouterLink v-else :to=\"next.path\">\n          {{ next.title || next.path }}\n          <a-icon type=\"right\" />\n        </RouterLink>\n      </span>\n    </p>\n  </div>\n</template>\n\n<script>\nimport { resolvePage } from '../util'\nimport isString from 'lodash/isString'\nimport isNil from 'lodash/isNil'\n\nexport default {\n  name: 'PageNav',\n\n  props: ['sidebarItems'],\n\n  computed: {\n    prev() {\n      return resolvePageLink(LINK_TYPES.PREV, this)\n    },\n\n    next() {\n      return resolvePageLink(LINK_TYPES.NEXT, this)\n    }\n  }\n}\n\nfunction resolvePrev(page, items) {\n  return find(page, items, -1)\n}\n\nfunction resolveNext(page, items) {\n  return find(page, items, 1)\n}\n\nconst LINK_TYPES = {\n  NEXT: {\n    resolveLink: resolveNext,\n    getThemeLinkConfig: ({ nextLinks }) => nextLinks,\n    getPageLinkConfig: ({ frontmatter }) => frontmatter.next\n  },\n  PREV: {\n    resolveLink: resolvePrev,\n    getThemeLinkConfig: ({ prevLinks }) => prevLinks,\n    getPageLinkConfig: ({ frontmatter }) => frontmatter.prev\n  }\n}\n\nfunction resolvePageLink(linkType, { $themeConfig, $page, $route, $site, sidebarItems }) {\n  const { resolveLink, getThemeLinkConfig, getPageLinkConfig } = linkType\n\n  // Get link config from theme\n  const themeLinkConfig = getThemeLinkConfig($themeConfig)\n\n  // Get link config from current page\n  const pageLinkConfig = getPageLinkConfig($page)\n\n  // Page link config will overwrite global theme link config if defined\n  const link = isNil(pageLinkConfig) ? themeLinkConfig : pageLinkConfig\n\n  if (link === false) {\n    return\n  } else if (isString(link)) {\n    return resolvePage($site.pages, link, $route.path)\n  } else {\n    return resolveLink($page, sidebarItems)\n  }\n}\n\nfunction find(page, items, offset) {\n  const res = []\n  flatten(items, res)\n  for (let i = 0; i < res.length; i++) {\n    const cur = res[i]\n    if (cur.type === 'page' && cur.path === decodeURIComponent(page.path)) {\n      return res[i + offset]\n    }\n  }\n}\n\nfunction flatten(items, res) {\n  for (let i = 0, l = items.length; i < l; i++) {\n    if (items[i].type === 'group') {\n      flatten(items[i].children || [], res)\n    } else {\n      res.push(items[i])\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n@import '../styles/palette.less';\n@import '../styles/wrapper.less';\n.page-nav {\n  // @extend $wrapper;\n  & {\n    .wrapper;\n  }\n  \n  padding-top: 1rem;\n  padding-bottom: 0;\n\n  .inner {\n    min-height: 2rem;\n    margin-top: 0;\n    border-top: 1px solid @borderColor;\n    padding-top: 1.75rem;\n    overflow: auto; // clear float\n  }\n\n  .next {\n    float: right;\n  }\n}\n</style>\n"]}]}